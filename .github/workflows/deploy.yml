name: "Deploy XDCF Site"

on:
  # これをつかうと、手動デプロイできる
  workflow_dispatch:
  # mainブランチにpushがあったときにも実行される
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    # Nodeのバージョンをここで一括管理
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # pnpmを利用しているので
      - run: npm install -g pnpm && pnpm install

      # 静的ファイルを生成する
      - name: Build App
        env:
          NEXT_PUBLIC_ADOBE_FONTS_KIT_ID: ${{ secrets.NEXT_PUBLIC_ADOBE_FONTS_KIT_ID }}
        run: pnpm run build
      
      - name: SFTP upload
        uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{secrets.FTP_SERVER}}
          username: ${{secrets.FTP_USERNAME}}
          password: ${{secrets.FTP_PASSWORD}}
          port: 22
          uploads: |
            ./out/ => /home/${{ secrets.FTP_USERNAME }}/www/${{ secrets.FTP_DEPLOY_DIR }}/
          delete: true

      # - name: FTP Deploy
      #   # FTPデプロイできるアクションがあるので、それを利用する
      #   uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      #   # FTP接続に必要な環境変数を設定する
      #   with:
      #     # 例： username.sakura.ne.jp
      #     server: ${{ secrets.FTP_SERVER }}
      #     # 例： username
      #     username: ${{ secrets.FTP_USERNAME }}
      #     # FTPパスワード(sshログインするときとかに使うやつ)
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     # yarn buildによって生成される静的ファイルのディレクトリ
      #     local-dir: ./out/
      #     # さくらのレンタルサーバー上の、デプロイしたいディレクトリ
      #     # 例: /home/username/www/dev/
      #     server-dir: home/${{ secrets.FTP_USERNAME }}/www/${{ secrets.FTP_DEPLOY_DIR }}/
      #     protocol: ftps